pipeline:
  test_db:
    image: postgres:9-alpine
    commands:
      - sleep 5
      - psql -U postgres -d postgres -h database

  test:
    image: python
    commands:
      - pip install -r requirements.txt
      - pip install -r requirements-dev.txt
      - pytest --cov=./
      - codecov
    environment:
      - DB_DSN=postgres://postgres@database:5432/postgres
      - DB_SSL=False
    secrets: [CODECOV_TOKEN]

  build:
    image: plugins/docker
    repo: username502/sputnik_bot
    secrets: [docker_username, docker_password]
    build_args:
      - DRONE=${DRONE}
      - DRONE_TAG=${DRONE_TAG}
      - DRONE_COMMIT=${DRONE_COMMIT}
      - DRONE_BRANCH=${DRONE_BRANCH}
    when:
      branch: master
      event: push

  deploy:
    image: appleboy/drone-ssh
    host: sputnik.bot.assa.dev
    username: devusers
    port: 22
    command_timeout: 5m
    secrets: [ssh_key]
    script:
      - cd ~/sputnik_bot/
      - export DRONE_COMMIT=${DRONE_COMMIT}
      - git pull --rebase --no-autostash
      - docker-compose pull
      - docker-compose up -d
      - docker system prune --all --force
    when:
      branch: master
      event: push

services:
  database:
    image: postgres:9-alpine
    ports:
    - 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
